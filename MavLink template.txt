#source: https://mavlink.io/en/mavgen_python/
from pymavlink import mavutil

# Start a connection listening on a UDP port
the_connection = mavutil.mavlink_connection('udpin:localhost:14540')

# Wait for the first heartbeat 
#   This sets the system and component ID of remote system for the link
the_connection.wait_heartbeat()
print("Heartbeat from system (system %u component %u)" % (the_connection.target_system, the_connection.target_component))

# Once connected, use 'the_connection' to get and send messages

#def system_time_send(self, time_unix_usec, time_boot_ms, force_mavlink1=False):
   
    #The system time is the time of the master clock, typically the
    #computer clock of the main onboard computer.

    #time_unix_usec    : Timestamp (UNIX epoch time). (uint64_t)
    #time_boot_ms      : Timestamp (time since system boot). (uint32_t)
 

 the_connection.mav.system_time_send(time_unix_usec, time_boot_ms)

 #receiving messages:
 try: 
    altitude = the_connection.messages['GPS_RAW_INT'].alt  # Note, you can access message fields as attributes!
    timestamp = the_connection.time_since('GPS_RAW_INT')
except:
    print('No GPS_RAW_INT message received')

    # Wait for a 'SYS_STATUS' message with the specified values.
msg = the_connection.recv_match(type='SYS_STATUS', condition='SYS_STATUS.mode==2 and SYS_STATUS.nav_mode==4', blocking=True)